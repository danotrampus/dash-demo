{"version":3,"sources":["webpack:///./$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<video #videoPlayer\\n  id=\\\"video\\\"\\n  width=\\\"640\\\"\\n  controls\\n></video>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, AfterViewInit, ViewChild, ElementRef } from '@angular/core';\nimport * as shaka from 'shaka-player';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements AfterViewInit {\n  @ViewChild('videoPlayer', { static: true }) videoElementRef: ElementRef;\n  videoElement: HTMLVideoElement;\n\n  manifestUri = 'http://localhost:3000/mpd';\n\n  ngAfterViewInit() {\n    // Install built-in polyfills to patch browser incompatibilities.\n    shaka.polyfill.installAll();\n\n    // Check to see if the browser supports the basic APIs Shaka needs.\n    if (shaka.Player.isBrowserSupported()) {\n      // Everything looks good!\n      this.videoElement = this.videoElementRef.nativeElement;\n      this.initPlayer();\n    } else {\n      // This browser does not have the minimum set of APIs we need.\n      console.error('Browser not supported!');\n    }\n  }\n\n  private initPlayer() {\n    // Create a Player instance.\n    // var video = document.getElementById('video');\n    const player = new shaka.Player(this.videoElement);\n\n    // Attach player to the window to make it easy to access in the JS console.\n    // window.player = player;\n\n    // Listen for error events.\n    player.addEventListener('error', this.onErrorEvent);\n\n    // Try to load a manifest.\n    // This is an asynchronous process.\n    player.load(this.manifestUri).then(() => {\n      // This runs if the asynchronous load is successful.\n      console.log('The video has now been loaded!');\n    }).catch(this.onError);  // onError is executed if the asynchronous load fails.\n  }\n\n  private onErrorEvent(event) {\n    // Extract the shaka.util.Error object from the event.\n    this.onError(event.detail);\n  }\n\n  private onError(error) {\n    // Log the error.\n    console.error('Error code', error.code, 'object', error);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}